services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: expense-tracker-db
    environment:
      POSTGRES_DB: expense_tracker
      POSTGRES_USER: expense_user
      POSTGRES_PASSWORD: expense_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U expense_user -d expense_tracker"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - expense-tracker-network

  # FastAPI Application
  api:
    build: .
    container_name: expense-tracker-api
    environment:
      DATABASE_URL: postgresql://expense_user:expense_password@postgres:5432/expense_tracker
      ENVIRONMENT: development
      HOST: 0.0.0.0
      PORT: 8000
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - ./start.py:/app/start.py
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - expense-tracker-network
    restart: unless-stopped

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: expense-tracker-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@expense-tracker.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - expense-tracker-network
    profiles:
      - tools  # Only start when explicitly requested

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  expense-tracker-network:
    driver: bridge 